<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">
    <http auto-config="true">
        <form-login login-page='/logForm'/>
        <intercept-url pattern="/user" method="POST" access="permitAll" />
        <intercept-url pattern="/newuser" access="permitAll" />
        <intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
        <logout logout-success-url="/logForm"/>


    </http>
    <context:annotation-config/>
    <beans:bean name="config" class="com.Config" />
    <beans:bean id ="passwordEncoder" class = "org.springframework.security.crypto.password.NoOpPasswordEncoder" />
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <password-encoder ref="passwordEncoder"/>
            <jdbc-user-service id="jdbcUserService" data-source-ref="ds"
                               users-by-username-query="select login ,password, true from users where login=?"
                               authorities-by-username-query=
                                       "select login, role from users where login = ?"/>
        </authentication-provider>
    </authentication-manager>
</beans:beans>
